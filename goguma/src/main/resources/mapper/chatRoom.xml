<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.store.goguma.repository.ChatRoomRepository">

	<select id="findAllByUserId"
		resultType="com.store.goguma.chat.dto.chatRoom.ChatRoomDto">
		SELECT
		p.p_id AS pId,
		p.address AS productAddress,
		p.name AS
		productName,
		p.price AS productPrice,
		p.host_id AS productHostId,
		p.description AS productDescription,
		p.file AS productFile,
		p.main_category_id AS mainCategoryId,
		p.sub_category_id AS
		subCategoryId,
		p.confirm_yn as confirmYn ,
		c.id AS roomId,
		c.u_id AS
		userId,
		c.host_id AS hostId,
		c.create_at AS createAt,
		hu.name AS
		hostName,
		u.name AS userName ,
		rm.u_id as u_id ,
		rm.room_id as roomId,
		rm.room_name as roomName
		FROM
		chat_room c
		LEFT JOIN
		product p
		ON p.p_id =
		c.p_id
		INNER JOIN user hu
		ON hu.u_id = c.host_id
		INNER JOIN user u
		ON
		u.u_id = c.u_id
		left join chat_room_name rm
		on c.id = rm.room_id and
		rm.u_id = #{userId}
		WHERE
		(c.host_id = #{userId}
		AND c.host_exit != 'Y')
		OR (c.u_id = #{userId} AND c.user_exit != 'Y');
	</select>

	<select id="findByRoomId"
		resultType="com.store.goguma.chat.dto.chatRoom.ChatRoomUpdateDto">
		select
		c.id as id,
		c.p_id as productId ,
		c.u_id as userId ,
		c.host_id as hostId ,
		c.create_at as createAt ,
		c.user_exit
		as userExit ,
		c.host_exit as hostExit ,
		rm.room_name as roomName
		from
		chat_room c
		left
		join chat_room_name rm
		on c.id = rm.room_id and rm.u_id = #{userId}
		where c.id = #{roomId};
	</select>

	<!-- 채팅방 개설 -->
	<insert id="saveRoom" useGeneratedKeys="true" keyProperty="id"
		keyColumn="id">
		insert into chat_room (p_id, u_id, host_id)
		values (#{pId},
		#{uId}, #{hostId})
	</insert>

	<update id="updateHostExit">
		update chat_room
		set host_exit = 'Y'
		where id =
		#{roomId}
	</update>

	<update id="updateUserExit">
		update chat_room
		set user_exit = 'Y'
		where id =
		#{roomId}
	</update>

	<select id="isExistChatRoom" resultType="int">
		select count(*) from chat_room
		where p_id = #{pId} and u_id = #{uId}
		and user_exit = 'N';
	</select>
	
	<select id="countChatRoom">
		SELECT COUNT(*) FROM chat_room WHERE p_id = #{pId}
	</select>
	
	<select id="countChatRoomAll">
		select count(*) from chat_room
	</select>
</mapper>